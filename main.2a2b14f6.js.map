{"version":3,"sources":["src/1-name/index.ts","src/2-function/index.ts","src/3-data/index.ts","src/4-object/index.ts","src/artisan/index.ts","src/main.ts"],"names":[],"mappings":";AAwBA,aAxBA,SAAgB,EAAkB,IAElC,SAAgB,IACP,OAAA,EAGT,SAAgB,IACP,MAAA,CAAE,WAAY,GAAI,WAAY,KAGvC,SAAgB,IACP,MAAA,CAAC,WAAY,UAGtB,SAAgB,EACd,GAEI,OAAA,EACK,WAEA,OAIX,SAAgB,IACP,MAAA,CAAC,OAAQ,WAAY,oBAAqB,cAAe,SADlE,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAxBA,QAAA,kBAAA,EAEA,QAAA,gBAAA,EAIA,QAAA,UAAA,EAIA,QAAA,cAAA,EAIA,QAAA,+BAAA,EAUA,QAAA,gCAAA;;ACxBA,aAAA,SAAgB,EAAoB,IAApC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA;;ACAA,aAAA,SAAgB,EAAwB,IAAxC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,wBAAA;;ACAA,aAAA,SAAgB,EAAkB,IAAlC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA;;ACAA,aAAA,SAAgB,EAAgB,EAAqB,GAC5C,MAAA,CAAC,kBAAmB,iBAD7B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA;;ACyBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAzBA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,gBACA,EAAA,QAAA,YACA,EAAA,QAAA,cACA,EAAA,QAAA,aAEA,SAAgB,IACP,OAAA,EAGT,SAAgB,IACP,OAAA,EAGT,SAAgB,IAQP,MAPsB,CAC3B,mCACA,oCACA,6BACA,8BACA,uCAKJ,SAAgB,EAAgB,GAC9B,QAAQ,IAAI,GACZ,EAAA,kBAAkB,CAAC,EAAW,KAC9B,EAAA,oBAAoB,CAAC,EAAW,KAChC,EAAA,wBAAwB,CAAC,EAAW,KACpC,EAAA,kBAAkB,GACZ,IAAA,EAAa,CACjB,QAAQ,GAEV,QAAQ,IAAI,CAAE,WAAU,IAClB,IAAA,EAAU,EAAA,gBAAgB,EAAY,GAC5C,QAAQ,IAAI,GA9Bd,QAAA,cAAA,EAIA,QAAA,mBAAA,EAIA,QAAA,mBAAA,EAWA,QAAA,gBAAA","file":"main.2a2b14f6.js","sourceRoot":"..","sourcesContent":["export function writeReadableCode(priciples: string[]) {}\r\n\r\nexport function useAnStyleGuide(): boolean {\r\n  return true;\r\n}\r\n\r\nexport function getLimits(): any {\r\n  return { lineLenght: 80, fileLength: 160 };\r\n}\r\n\r\nexport function enforceLimits(): string[] {\r\n  return [\"Prettier\", \"EsLint\"];\r\n}\r\n\r\nexport function getGrammarKindForVariableNames(\r\n  isAFlagVariable: boolean\r\n): string {\r\n  if (isAFlagVariable) {\r\n    return \"verbNoun\";\r\n  } else {\r\n    return \"noun\";\r\n  }\r\n}\r\n\r\nexport function getGrammarKindsForFunctionNames(): string[] {\r\n  return [\"verb\", \"verbNoun\", \"verbNounAdjective\", \"verbAdverbe\", \"verb*\"];\r\n}\r\n","export function writeSmallFunctions(priciples: string[]) {}\r\n","export function avoidPrimitiveObsession(priciples: string[]) {}\r\n","export function writeShortModules(priciples: string[]) {}\r\n","export function becomeAnArtisan(priciples: string[], discipline: object) {\r\n  return [\"professionalism\", \"craftsmanship\"];\r\n}\r\n","import { writeReadableCode } from \"./1-name\";\r\nimport { writeSmallFunctions } from \"./2-function\";\r\nimport { avoidPrimitiveObsession } from \"./3-data\";\r\nimport { writeShortModules } from \"./4-object\";\r\nimport { becomeAnArtisan } from \"./artisan\";\r\n\r\nexport function isMyCodeClean(): boolean {\r\n  return false;\r\n}\r\n\r\nexport function shouldICleanMyCode(): boolean {\r\n  return true;\r\n}\r\n\r\nexport function getCleanPrinciples(): string[] {\r\n  const principles: string[] = [\r\n    \"Show intention and hide details.\",\r\n    \"Avoid globalization and coupling.\",\r\n    \"Separate responsibilities.\",\r\n    \"Don't Repeat Yourself (DRY)\",\r\n    \"Keep It Simple, (not) Stupid (KISS)\"\r\n  ];\r\n  return principles;\r\n}\r\n\r\nexport function applyPrinciples(principles: string[]) {\r\n  console.log(principles);\r\n  writeReadableCode([principles[0]]);\r\n  writeSmallFunctions([principles[2]]);\r\n  avoidPrimitiveObsession([principles[4]]);\r\n  writeShortModules(principles);\r\n  const discipline = {\r\n    values: true\r\n  };\r\n  console.log({ discipline });\r\n  const artisan = becomeAnArtisan(principles, discipline);\r\n  console.log(artisan);\r\n}\r\n"]}